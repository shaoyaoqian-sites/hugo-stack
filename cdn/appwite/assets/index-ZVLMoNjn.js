(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function n(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(i){if(i.ep)return;i.ep=!0;const s=n(i);fetch(i.href,s)}})();function b(e,t,n,o){function i(s){return s instanceof n?s:new n(function(a){a(s)})}return new(n||(n=Promise))(function(s,a){function r(p){try{l(o.next(p))}catch(u){a(u)}}function d(p){try{l(o.throw(p))}catch(u){a(u)}}function l(p){p.done?s(p.value):i(p.value).then(r,d)}l((o=o.apply(e,[])).next())})}function P(e,t,n,o){if(typeof t=="function"?e!==t||!o:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n==="m"?o:n==="a"?o.call(e):o?o.value:t.get(e)}class c extends Error{constructor(t,n=0,o="",i=""){super(t),this.name="AppwriteException",this.message=t,this.code=n,this.type=o,this.response=i}}class f{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:"",devkey:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"18.1.1","X-Appwrite-Response-Format":"1.7.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=window==null?void 0:window.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=window==null?void 0:window.setInterval(()=>{var t;(t=this.realtime.socket)===null||t===void 0||t.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var t,n,o;if(this.realtime.channels.size<1){this.realtime.reconnect=!1,(t=this.realtime.socket)===null||t===void 0||t.close();return}const i=new URLSearchParams;i.set("project",this.config.project),this.realtime.channels.forEach(a=>{i.append("channels[]",a)});const s=this.config.endpointRealtime+"/realtime?"+i.toString();(s!==this.realtime.url||!this.realtime.socket||((n=this.realtime.socket)===null||n===void 0?void 0:n.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&((o=this.realtime.socket)===null||o===void 0?void 0:o.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=s,this.realtime.socket=new WebSocket(s),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",a=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",a=>{var r,d,l;if(!this.realtime.reconnect||((d=(r=this.realtime)===null||r===void 0?void 0:r.lastMessage)===null||d===void 0?void 0:d.type)==="error"&&((l=this.realtime)===null||l===void 0?void 0:l.lastMessage.data).code===1008){this.realtime.reconnect=!0;return}const p=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${p/1e3} seconds.`,a.reason),setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},p)}))},onMessage:t=>{var n,o;try{const i=JSON.parse(t.data);switch(this.realtime.lastMessage=i,i.type){case"connected":const s=JSON.parse((n=window.localStorage.getItem("cookieFallback"))!==null&&n!==void 0?n:"{}"),a=s==null?void 0:s[`a_session_${this.config.project}`],r=i.data;a&&!r.user&&((o=this.realtime.socket)===null||o===void 0||o.send(JSON.stringify({type:"authentication",data:{session:a}})));break;case"event":let d=i.data;if(d!=null&&d.channels){if(!d.channels.some(p=>this.realtime.channels.has(p)))return;this.realtime.subscriptions.forEach(p=>{d.channels.some(u=>p.channels.includes(u))&&setTimeout(()=>p.callback(d))})}break;case"pong":break;case"error":throw i.data;default:break}}catch(i){console.error(i)}},cleanUp:t=>{this.realtime.channels.forEach(n=>{t.includes(n)&&(Array.from(this.realtime.subscriptions).some(([i,s])=>s.channels.includes(n))||this.realtime.channels.delete(n))})}}}setEndpoint(t){if(!t.startsWith("http://")&&!t.startsWith("https://"))throw new c("Invalid endpoint URL: "+t);return this.config.endpoint=t,this.config.endpointRealtime=t.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(t){if(!t.startsWith("ws://")&&!t.startsWith("wss://"))throw new c("Invalid realtime endpoint URL: "+t);return this.config.endpointRealtime=t,this}setProject(t){return this.headers["X-Appwrite-Project"]=t,this.config.project=t,this}setJWT(t){return this.headers["X-Appwrite-JWT"]=t,this.config.jwt=t,this}setLocale(t){return this.headers["X-Appwrite-Locale"]=t,this.config.locale=t,this}setSession(t){return this.headers["X-Appwrite-Session"]=t,this.config.session=t,this}setDevKey(t){return this.headers["X-Appwrite-Dev-Key"]=t,this.config.devkey=t,this}subscribe(t,n){let o=typeof t=="string"?[t]:t;o.forEach(s=>this.realtime.channels.add(s));const i=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(i,{channels:o,callback:n}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(i),this.realtime.cleanUp(o),this.realtime.connect()}}prepareRequest(t,n,o={},i={}){if(t=t.toUpperCase(),o=Object.assign({},this.headers,o),typeof window<"u"&&window.localStorage){const a=window.localStorage.getItem("cookieFallback");a&&(o["X-Fallback-Cookies"]=a)}let s={method:t,headers:o};if(o["X-Appwrite-Dev-Key"]===void 0&&(s.credentials="include"),t==="GET")for(const[a,r]of Object.entries(f.flatten(i)))n.searchParams.append(a,r);else switch(o["content-type"]){case"application/json":s.body=JSON.stringify(i);break;case"multipart/form-data":const a=new FormData;for(const[r,d]of Object.entries(i))if(d instanceof File)a.append(r,d,d.name);else if(Array.isArray(d))for(const l of d)a.append(`${r}[]`,l);else a.append(r,d);s.body=a,delete o["content-type"];break}return{uri:n.toString(),options:s}}chunkedUpload(t,n,o={},i={},s){return b(this,void 0,void 0,function*(){const a=Object.values(i).find(l=>l instanceof File);if(!a)throw new Error("File not found in payload");if(a.size<=f.CHUNK_SIZE)return yield this.call(t,n,o,i);let r=0,d=null;for(;r<a.size;){let l=r+f.CHUNK_SIZE;l>=a.size&&(l=a.size),o["content-range"]=`bytes ${r}-${l-1}/${a.size}`;const p=a.slice(r,l);let u=Object.assign(Object.assign({},i),{file:new File([p],a.name)});d=yield this.call(t,n,o,u),s&&typeof s=="function"&&s({$id:d.$id,progress:Math.round(l/a.size*100),sizeUploaded:l,chunksTotal:Math.ceil(a.size/f.CHUNK_SIZE),chunksUploaded:Math.ceil(l/f.CHUNK_SIZE)}),d&&d.$id&&(o["x-appwrite-id"]=d.$id),r=l}return d})}ping(){return b(this,void 0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(t,n,o={},i={},s="json"){var a,r;return b(this,void 0,void 0,function*(){const{uri:d,options:l}=this.prepareRequest(t,n,o,i);let p=null;const u=yield fetch(d,l);if(u.type==="opaque")throw new c(`Invalid Origin. Register your new client (${window.location.host}) as a new Web platform on your project console dashboard`,403,"forbidden","");const g=u.headers.get("x-appwrite-warning");if(g&&g.split(";").forEach(h=>console.warn("Warning: "+h)),!((a=u.headers.get("content-type"))===null||a===void 0)&&a.includes("application/json")?p=yield u.json():s==="arrayBuffer"?p=yield u.arrayBuffer():p={message:yield u.text()},400<=u.status){let h="";throw!((r=u.headers.get("content-type"))===null||r===void 0)&&r.includes("application/json")||s==="arrayBuffer"?h=JSON.stringify(p):h=p==null?void 0:p.message,new c(p==null?void 0:p.message,u.status,p==null?void 0:p.type,h)}const k=u.headers.get("X-Fallback-Cookies");return typeof window<"u"&&window.localStorage&&k&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",k)),p})}static flatten(t,n=""){let o={};for(const[i,s]of Object.entries(t)){let a=n?n+"["+i+"]":i;Array.isArray(s)?o=Object.assign(Object.assign({},o),f.flatten(s,a)):o[a]=s}return o}}f.CHUNK_SIZE=1024*1024*5;class y{constructor(t){this.client=t}static flatten(t,n=""){let o={};for(const[i,s]of Object.entries(t)){let a=n?n+"["+i+"]":i;Array.isArray(s)?o=Object.assign(Object.assign({},o),y.flatten(s,a)):o[a]=s}return o}}y.CHUNK_SIZE=5*1024*1024;class B{constructor(t){this.client=t}get(){const t="/account",n={},o=new URL(this.client.config.endpoint+t),i={};return this.client.call("get",o,i,n)}create(t,n,o,i){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "email"');if(typeof o>"u")throw new c('Missing required parameter: "password"');const s="/account",a={};typeof t<"u"&&(a.userId=t),typeof n<"u"&&(a.email=n),typeof o<"u"&&(a.password=o),typeof i<"u"&&(a.name=i);const r=new URL(this.client.config.endpoint+s),d={"content-type":"application/json"};return this.client.call("post",r,d,a)}updateEmail(t,n){if(typeof t>"u")throw new c('Missing required parameter: "email"');if(typeof n>"u")throw new c('Missing required parameter: "password"');const o="/account/email",i={};typeof t<"u"&&(i.email=t),typeof n<"u"&&(i.password=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("patch",s,a,i)}listIdentities(t){const n="/account/identities",o={};typeof t<"u"&&(o.queries=t);const i=new URL(this.client.config.endpoint+n),s={};return this.client.call("get",i,s,o)}deleteIdentity(t){if(typeof t>"u")throw new c('Missing required parameter: "identityId"');const n="/account/identities/{identityId}".replace("{identityId}",t),o={},i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("delete",i,s,o)}createJWT(){const t="/account/jwts",n={},o=new URL(this.client.config.endpoint+t),i={"content-type":"application/json"};return this.client.call("post",o,i,n)}listLogs(t){const n="/account/logs",o={};typeof t<"u"&&(o.queries=t);const i=new URL(this.client.config.endpoint+n),s={};return this.client.call("get",i,s,o)}updateMFA(t){if(typeof t>"u")throw new c('Missing required parameter: "mfa"');const n="/account/mfa",o={};typeof t<"u"&&(o.mfa=t);const i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("patch",i,s,o)}createMfaAuthenticator(t){if(typeof t>"u")throw new c('Missing required parameter: "type"');const n="/account/mfa/authenticators/{type}".replace("{type}",t),o={},i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("post",i,s,o)}updateMfaAuthenticator(t,n){if(typeof t>"u")throw new c('Missing required parameter: "type"');if(typeof n>"u")throw new c('Missing required parameter: "otp"');const o="/account/mfa/authenticators/{type}".replace("{type}",t),i={};typeof n<"u"&&(i.otp=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("put",s,a,i)}deleteMfaAuthenticator(t){if(typeof t>"u")throw new c('Missing required parameter: "type"');const n="/account/mfa/authenticators/{type}".replace("{type}",t),o={},i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("delete",i,s,o)}createMfaChallenge(t){if(typeof t>"u")throw new c('Missing required parameter: "factor"');const n="/account/mfa/challenge",o={};typeof t<"u"&&(o.factor=t);const i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("post",i,s,o)}updateMfaChallenge(t,n){if(typeof t>"u")throw new c('Missing required parameter: "challengeId"');if(typeof n>"u")throw new c('Missing required parameter: "otp"');const o="/account/mfa/challenge",i={};typeof t<"u"&&(i.challengeId=t),typeof n<"u"&&(i.otp=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("put",s,a,i)}listMfaFactors(){const t="/account/mfa/factors",n={},o=new URL(this.client.config.endpoint+t),i={};return this.client.call("get",o,i,n)}getMfaRecoveryCodes(){const t="/account/mfa/recovery-codes",n={},o=new URL(this.client.config.endpoint+t),i={};return this.client.call("get",o,i,n)}createMfaRecoveryCodes(){const t="/account/mfa/recovery-codes",n={},o=new URL(this.client.config.endpoint+t),i={"content-type":"application/json"};return this.client.call("post",o,i,n)}updateMfaRecoveryCodes(){const t="/account/mfa/recovery-codes",n={},o=new URL(this.client.config.endpoint+t),i={"content-type":"application/json"};return this.client.call("patch",o,i,n)}updateName(t){if(typeof t>"u")throw new c('Missing required parameter: "name"');const n="/account/name",o={};typeof t<"u"&&(o.name=t);const i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("patch",i,s,o)}updatePassword(t,n){if(typeof t>"u")throw new c('Missing required parameter: "password"');const o="/account/password",i={};typeof t<"u"&&(i.password=t),typeof n<"u"&&(i.oldPassword=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("patch",s,a,i)}updatePhone(t,n){if(typeof t>"u")throw new c('Missing required parameter: "phone"');if(typeof n>"u")throw new c('Missing required parameter: "password"');const o="/account/phone",i={};typeof t<"u"&&(i.phone=t),typeof n<"u"&&(i.password=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("patch",s,a,i)}getPrefs(){const t="/account/prefs",n={},o=new URL(this.client.config.endpoint+t),i={};return this.client.call("get",o,i,n)}updatePrefs(t){if(typeof t>"u")throw new c('Missing required parameter: "prefs"');const n="/account/prefs",o={};typeof t<"u"&&(o.prefs=t);const i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("patch",i,s,o)}createRecovery(t,n){if(typeof t>"u")throw new c('Missing required parameter: "email"');if(typeof n>"u")throw new c('Missing required parameter: "url"');const o="/account/recovery",i={};typeof t<"u"&&(i.email=t),typeof n<"u"&&(i.url=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,i)}updateRecovery(t,n,o){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "secret"');if(typeof o>"u")throw new c('Missing required parameter: "password"');const i="/account/recovery",s={};typeof t<"u"&&(s.userId=t),typeof n<"u"&&(s.secret=n),typeof o<"u"&&(s.password=o);const a=new URL(this.client.config.endpoint+i),r={"content-type":"application/json"};return this.client.call("put",a,r,s)}listSessions(){const t="/account/sessions",n={},o=new URL(this.client.config.endpoint+t),i={};return this.client.call("get",o,i,n)}deleteSessions(){const t="/account/sessions",n={},o=new URL(this.client.config.endpoint+t),i={"content-type":"application/json"};return this.client.call("delete",o,i,n)}createAnonymousSession(){const t="/account/sessions/anonymous",n={},o=new URL(this.client.config.endpoint+t),i={"content-type":"application/json"};return this.client.call("post",o,i,n)}createEmailPasswordSession(t,n){if(typeof t>"u")throw new c('Missing required parameter: "email"');if(typeof n>"u")throw new c('Missing required parameter: "password"');const o="/account/sessions/email",i={};typeof t<"u"&&(i.email=t),typeof n<"u"&&(i.password=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,i)}updateMagicURLSession(t,n){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "secret"');const o="/account/sessions/magic-url",i={};typeof t<"u"&&(i.userId=t),typeof n<"u"&&(i.secret=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("put",s,a,i)}createOAuth2Session(t,n,o,i){if(typeof t>"u")throw new c('Missing required parameter: "provider"');const s="/account/sessions/oauth2/{provider}".replace("{provider}",t),a={};typeof n<"u"&&(a.success=n),typeof o<"u"&&(a.failure=o),typeof i<"u"&&(a.scopes=i);const r=new URL(this.client.config.endpoint+s);a.project=this.client.config.project;for(const[d,l]of Object.entries(y.flatten(a)))r.searchParams.append(d,l);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=r.toString();return}else return r.toString()}updatePhoneSession(t,n){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "secret"');const o="/account/sessions/phone",i={};typeof t<"u"&&(i.userId=t),typeof n<"u"&&(i.secret=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("put",s,a,i)}createSession(t,n){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "secret"');const o="/account/sessions/token",i={};typeof t<"u"&&(i.userId=t),typeof n<"u"&&(i.secret=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,i)}getSession(t){if(typeof t>"u")throw new c('Missing required parameter: "sessionId"');const n="/account/sessions/{sessionId}".replace("{sessionId}",t),o={},i=new URL(this.client.config.endpoint+n),s={};return this.client.call("get",i,s,o)}updateSession(t){if(typeof t>"u")throw new c('Missing required parameter: "sessionId"');const n="/account/sessions/{sessionId}".replace("{sessionId}",t),o={},i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("patch",i,s,o)}deleteSession(t){if(typeof t>"u")throw new c('Missing required parameter: "sessionId"');const n="/account/sessions/{sessionId}".replace("{sessionId}",t),o={},i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("delete",i,s,o)}updateStatus(){const t="/account/status",n={},o=new URL(this.client.config.endpoint+t),i={"content-type":"application/json"};return this.client.call("patch",o,i,n)}createPushTarget(t,n,o){if(typeof t>"u")throw new c('Missing required parameter: "targetId"');if(typeof n>"u")throw new c('Missing required parameter: "identifier"');const i="/account/targets/push",s={};typeof t<"u"&&(s.targetId=t),typeof n<"u"&&(s.identifier=n),typeof o<"u"&&(s.providerId=o);const a=new URL(this.client.config.endpoint+i),r={"content-type":"application/json"};return this.client.call("post",a,r,s)}updatePushTarget(t,n){if(typeof t>"u")throw new c('Missing required parameter: "targetId"');if(typeof n>"u")throw new c('Missing required parameter: "identifier"');const o="/account/targets/{targetId}/push".replace("{targetId}",t),i={};typeof n<"u"&&(i.identifier=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("put",s,a,i)}deletePushTarget(t){if(typeof t>"u")throw new c('Missing required parameter: "targetId"');const n="/account/targets/{targetId}/push".replace("{targetId}",t),o={},i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("delete",i,s,o)}createEmailToken(t,n,o){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "email"');const i="/account/tokens/email",s={};typeof t<"u"&&(s.userId=t),typeof n<"u"&&(s.email=n),typeof o<"u"&&(s.phrase=o);const a=new URL(this.client.config.endpoint+i),r={"content-type":"application/json"};return this.client.call("post",a,r,s)}createMagicURLToken(t,n,o,i){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "email"');const s="/account/tokens/magic-url",a={};typeof t<"u"&&(a.userId=t),typeof n<"u"&&(a.email=n),typeof o<"u"&&(a.url=o),typeof i<"u"&&(a.phrase=i);const r=new URL(this.client.config.endpoint+s),d={"content-type":"application/json"};return this.client.call("post",r,d,a)}createOAuth2Token(t,n,o,i){if(typeof t>"u")throw new c('Missing required parameter: "provider"');const s="/account/tokens/oauth2/{provider}".replace("{provider}",t),a={};typeof n<"u"&&(a.success=n),typeof o<"u"&&(a.failure=o),typeof i<"u"&&(a.scopes=i);const r=new URL(this.client.config.endpoint+s);a.project=this.client.config.project;for(const[d,l]of Object.entries(y.flatten(a)))r.searchParams.append(d,l);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=r.toString();return}else return r.toString()}createPhoneToken(t,n){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "phone"');const o="/account/tokens/phone",i={};typeof t<"u"&&(i.userId=t),typeof n<"u"&&(i.phone=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,i)}createVerification(t){if(typeof t>"u")throw new c('Missing required parameter: "url"');const n="/account/verification",o={};typeof t<"u"&&(o.url=t);const i=new URL(this.client.config.endpoint+n),s={"content-type":"application/json"};return this.client.call("post",i,s,o)}updateVerification(t,n){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "secret"');const o="/account/verification",i={};typeof t<"u"&&(i.userId=t),typeof n<"u"&&(i.secret=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("put",s,a,i)}createPhoneVerification(){const t="/account/verification/phone",n={},o=new URL(this.client.config.endpoint+t),i={"content-type":"application/json"};return this.client.call("post",o,i,n)}updatePhoneVerification(t,n){if(typeof t>"u")throw new c('Missing required parameter: "userId"');if(typeof n>"u")throw new c('Missing required parameter: "secret"');const o="/account/verification/phone",i={};typeof t<"u"&&(i.userId=t),typeof n<"u"&&(i.secret=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("put",s,a,i)}}var T,H;class m{static custom(t){return t}static unique(t=7){const n=P(m,T,"m",H).call(m);let o="";for(let i=0;i<t;i++){const s=Math.floor(Math.random()*16).toString(16);o+=s}return n+o}}T=m,H=function(){const t=new Date,n=Math.floor(t.getTime()/1e3),o=t.getMilliseconds();return n.toString(16)+o.toString(16).padStart(5,"0")};var M;(function(e){e.Totp="totp"})(M||(M={}));var S;(function(e){e.Email="email",e.Phone="phone",e.Totp="totp",e.Recoverycode="recoverycode"})(S||(S={}));var v;(function(e){e.Amazon="amazon",e.Apple="apple",e.Auth0="auth0",e.Authentik="authentik",e.Autodesk="autodesk",e.Bitbucket="bitbucket",e.Bitly="bitly",e.Box="box",e.Dailymotion="dailymotion",e.Discord="discord",e.Disqus="disqus",e.Dropbox="dropbox",e.Etsy="etsy",e.Facebook="facebook",e.Figma="figma",e.Github="github",e.Gitlab="gitlab",e.Google="google",e.Linkedin="linkedin",e.Microsoft="microsoft",e.Notion="notion",e.Oidc="oidc",e.Okta="okta",e.Paypal="paypal",e.PaypalSandbox="paypalSandbox",e.Podio="podio",e.Salesforce="salesforce",e.Slack="slack",e.Spotify="spotify",e.Stripe="stripe",e.Tradeshift="tradeshift",e.TradeshiftBox="tradeshiftBox",e.Twitch="twitch",e.Wordpress="wordpress",e.Yahoo="yahoo",e.Yammer="yammer",e.Yandex="yandex",e.Zoho="zoho",e.Zoom="zoom",e.Mock="mock"})(v||(v={}));var j;(function(e){e.AvantBrowser="aa",e.AndroidWebViewBeta="an",e.GoogleChrome="ch",e.GoogleChromeIOS="ci",e.GoogleChromeMobile="cm",e.Chromium="cr",e.MozillaFirefox="ff",e.Safari="sf",e.MobileSafari="mf",e.MicrosoftEdge="ps",e.MicrosoftEdgeIOS="oi",e.OperaMini="om",e.Opera="op",e.OperaNext="on"})(j||(j={}));var L;(function(e){e.AmericanExpress="amex",e.Argencard="argencard",e.Cabal="cabal",e.Cencosud="cencosud",e.DinersClub="diners",e.Discover="discover",e.Elo="elo",e.Hipercard="hipercard",e.JCB="jcb",e.Mastercard="mastercard",e.Naranja="naranja",e.TarjetaShopping="targeta-shopping",e.UnionChinaPay="union-china-pay",e.Visa="visa",e.MIR="mir",e.Maestro="maestro",e.Rupay="rupay"})(L||(L={}));var R;(function(e){e.Afghanistan="af",e.Angola="ao",e.Albania="al",e.Andorra="ad",e.UnitedArabEmirates="ae",e.Argentina="ar",e.Armenia="am",e.AntiguaAndBarbuda="ag",e.Australia="au",e.Austria="at",e.Azerbaijan="az",e.Burundi="bi",e.Belgium="be",e.Benin="bj",e.BurkinaFaso="bf",e.Bangladesh="bd",e.Bulgaria="bg",e.Bahrain="bh",e.Bahamas="bs",e.BosniaAndHerzegovina="ba",e.Belarus="by",e.Belize="bz",e.Bolivia="bo",e.Brazil="br",e.Barbados="bb",e.BruneiDarussalam="bn",e.Bhutan="bt",e.Botswana="bw",e.CentralAfricanRepublic="cf",e.Canada="ca",e.Switzerland="ch",e.Chile="cl",e.China="cn",e.CoteDIvoire="ci",e.Cameroon="cm",e.DemocraticRepublicOfTheCongo="cd",e.RepublicOfTheCongo="cg",e.Colombia="co",e.Comoros="km",e.CapeVerde="cv",e.CostaRica="cr",e.Cuba="cu",e.Cyprus="cy",e.CzechRepublic="cz",e.Germany="de",e.Djibouti="dj",e.Dominica="dm",e.Denmark="dk",e.DominicanRepublic="do",e.Algeria="dz",e.Ecuador="ec",e.Egypt="eg",e.Eritrea="er",e.Spain="es",e.Estonia="ee",e.Ethiopia="et",e.Finland="fi",e.Fiji="fj",e.France="fr",e.MicronesiaFederatedStatesOf="fm",e.Gabon="ga",e.UnitedKingdom="gb",e.Georgia="ge",e.Ghana="gh",e.Guinea="gn",e.Gambia="gm",e.GuineaBissau="gw",e.EquatorialGuinea="gq",e.Greece="gr",e.Grenada="gd",e.Guatemala="gt",e.Guyana="gy",e.Honduras="hn",e.Croatia="hr",e.Haiti="ht",e.Hungary="hu",e.Indonesia="id",e.India="in",e.Ireland="ie",e.IranIslamicRepublicOf="ir",e.Iraq="iq",e.Iceland="is",e.Israel="il",e.Italy="it",e.Jamaica="jm",e.Jordan="jo",e.Japan="jp",e.Kazakhstan="kz",e.Kenya="ke",e.Kyrgyzstan="kg",e.Cambodia="kh",e.Kiribati="ki",e.SaintKittsAndNevis="kn",e.SouthKorea="kr",e.Kuwait="kw",e.LaoPeopleSDemocraticRepublic="la",e.Lebanon="lb",e.Liberia="lr",e.Libya="ly",e.SaintLucia="lc",e.Liechtenstein="li",e.SriLanka="lk",e.Lesotho="ls",e.Lithuania="lt",e.Luxembourg="lu",e.Latvia="lv",e.Morocco="ma",e.Monaco="mc",e.Moldova="md",e.Madagascar="mg",e.Maldives="mv",e.Mexico="mx",e.MarshallIslands="mh",e.NorthMacedonia="mk",e.Mali="ml",e.Malta="mt",e.Myanmar="mm",e.Montenegro="me",e.Mongolia="mn",e.Mozambique="mz",e.Mauritania="mr",e.Mauritius="mu",e.Malawi="mw",e.Malaysia="my",e.Namibia="na",e.Niger="ne",e.Nigeria="ng",e.Nicaragua="ni",e.Netherlands="nl",e.Norway="no",e.Nepal="np",e.Nauru="nr",e.NewZealand="nz",e.Oman="om",e.Pakistan="pk",e.Panama="pa",e.Peru="pe",e.Philippines="ph",e.Palau="pw",e.PapuaNewGuinea="pg",e.Poland="pl",e.FrenchPolynesia="pf",e.NorthKorea="kp",e.Portugal="pt",e.Paraguay="py",e.Qatar="qa",e.Romania="ro",e.Russia="ru",e.Rwanda="rw",e.SaudiArabia="sa",e.Sudan="sd",e.Senegal="sn",e.Singapore="sg",e.SolomonIslands="sb",e.SierraLeone="sl",e.ElSalvador="sv",e.SanMarino="sm",e.Somalia="so",e.Serbia="rs",e.SouthSudan="ss",e.SaoTomeAndPrincipe="st",e.Suriname="sr",e.Slovakia="sk",e.Slovenia="si",e.Sweden="se",e.Eswatini="sz",e.Seychelles="sc",e.Syria="sy",e.Chad="td",e.Togo="tg",e.Thailand="th",e.Tajikistan="tj",e.Turkmenistan="tm",e.TimorLeste="tl",e.Tonga="to",e.TrinidadAndTobago="tt",e.Tunisia="tn",e.Turkey="tr",e.Tuvalu="tv",e.Tanzania="tz",e.Uganda="ug",e.Ukraine="ua",e.Uruguay="uy",e.UnitedStates="us",e.Uzbekistan="uz",e.VaticanCity="va",e.SaintVincentAndTheGrenadines="vc",e.Venezuela="ve",e.Vietnam="vn",e.Vanuatu="vu",e.Samoa="ws",e.Yemen="ye",e.SouthAfrica="za",e.Zambia="zm",e.Zimbabwe="zw"})(R||(R={}));var E;(function(e){e.GET="GET",e.POST="POST",e.PUT="PUT",e.PATCH="PATCH",e.DELETE="DELETE",e.OPTIONS="OPTIONS"})(E||(E={}));var U;(function(e){e.Center="center",e.Topleft="top-left",e.Top="top",e.Topright="top-right",e.Left="left",e.Right="right",e.Bottomleft="bottom-left",e.Bottom="bottom",e.Bottomright="bottom-right"})(U||(U={}));var q;(function(e){e.Jpg="jpg",e.Jpeg="jpeg",e.Png="png",e.Webp="webp",e.Heic="heic",e.Avif="avif"})(q||(q={}));const I=new f;I.setEndpoint("https://fra.cloud.appwrite.io/v1").setProject("68416798003dd41d4bbb");const w=new B(I);document.getElementById("auth-form").style.display="block";async function N(){try{const e=await w.get();console.log("当前用户:",e),console.log("用户ID:",e.$id),console.log("用户邮箱:",e.email),console.log("邮箱验证状态:",e.emailVerification),document.getElementById("user-name").textContent=e.name?e.name:"用户",document.getElementById("user-id").textContent=e.$id,document.getElementById("user-email").textContent=e.email,document.getElementById("user-email-status").textContent=e.emailVerification?"已验证":"未验证",document.getElementById("user-info").style.display="block",document.getElementsByClassName("form-container")[0].style.display="none",document.getElementsByClassName("form-switcher")[0].style.display="none",e.emailVerification?document.getElementById("resend-verification").style.display="none":(document.getElementById("resend-verification").style.display="inline",document.getElementById("user-instruction").style.display="block")}catch(e){console.log("未登录:",e),document.getElementById("user-info").style.display="none",document.getElementsByClassName("form-container")[0].style.display="block",document.getElementsByClassName("form-switcher")[0].style.display="block"}}N();document.getElementById("logout").addEventListener("click",async()=>{w.deleteSession("current").then(function(t){console.log(t),window.location.reload()},function(t){console.log(t)})});document.querySelectorAll(".switch-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.getAttribute("data-form");document.querySelectorAll(".form").forEach(n=>{n.style.display=n.id===t?"block":"none"})})});document.getElementById("signup").addEventListener("click",async()=>{const e=document.getElementById("email").value,t=document.getElementById("password").value,n=document.getElementById("name").value;w.create(m.unique(),e,t,n).then(function(i){console.log(i)},function(i){console.log(i)})});document.getElementById("login").addEventListener("click",async()=>{const e=document.getElementById("email-1").value,t=document.getElementById("password-1").value,n=w.createEmailPasswordSession(e,t);console.log("email:",e),console.log("password:",t),n.then(function(o){console.log(o),window.location.reload()},function(o){console.log(o)})});document.getElementById("recover").addEventListener("click",async()=>{const e=document.getElementById("email-2").value,t=w.createRecovery(e,"http://localhost/recovery");console.log("email:",e),t.then(function(n){console.log(n)},function(n){console.log(n)})});
